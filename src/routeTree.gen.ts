/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/SignUp'
import { Route as LoginImport } from './routes/Login'
import { Route as DashboardImport } from './routes/Dashboard'
import { Route as LazyRouteImport } from './routes/lazy/route'
import { Route as HomeRouteImport } from './routes/home/route'
import { Route as IndexImport } from './routes/index'
import { Route as HomeUserIdImport } from './routes/home/$userId'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  path: '/SignUp',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/Login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/Dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LazyRouteRoute = LazyRouteImport.update({
  path: '/lazy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/lazy/route.lazy').then((d) => d.Route))

const HomeRouteRoute = HomeRouteImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeUserIdRoute = HomeUserIdImport.update({
  path: '/$userId',
  getParentRoute: () => HomeRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRoute
    }
    '/lazy': {
      id: '/lazy'
      path: '/lazy'
      fullPath: '/lazy'
      preLoaderRoute: typeof LazyRouteImport
      parentRoute: typeof rootRoute
    }
    '/Dashboard': {
      id: '/Dashboard'
      path: '/Dashboard'
      fullPath: '/Dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/SignUp': {
      id: '/SignUp'
      path: '/SignUp'
      fullPath: '/SignUp'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/home/$userId': {
      id: '/home/$userId'
      path: '/$userId'
      fullPath: '/home/$userId'
      preLoaderRoute: typeof HomeUserIdImport
      parentRoute: typeof HomeRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  HomeRouteRoute: HomeRouteRoute.addChildren({ HomeUserIdRoute }),
  LazyRouteRoute,
  DashboardRoute,
  LoginRoute,
  SignUpRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home",
        "/lazy",
        "/Dashboard",
        "/Login",
        "/SignUp"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home": {
      "filePath": "home/route.tsx",
      "children": [
        "/home/$userId"
      ]
    },
    "/lazy": {
      "filePath": "lazy/route.tsx"
    },
    "/Dashboard": {
      "filePath": "Dashboard.tsx"
    },
    "/Login": {
      "filePath": "Login.tsx"
    },
    "/SignUp": {
      "filePath": "SignUp.tsx"
    },
    "/home/$userId": {
      "filePath": "home/$userId.tsx",
      "parent": "/home"
    }
  }
}
ROUTE_MANIFEST_END */
